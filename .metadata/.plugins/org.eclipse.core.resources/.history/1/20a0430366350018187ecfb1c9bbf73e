package com.nordea.gol.service;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.springframework.stereotype.Service;

import com.nordea.gol.constants.GameOfLifeConstants;

@Service
public interface MatrixGenerationService {

	public String[][] generateCellMatrix() { 
		
		List<String> inputList = readInputFile();
		
		String[][] cellMatrixGrid = new String[GameOfLifeConstants.NUMBER_OF_ROWS][GameOfLifeConstants.NUMBER_OF_COLUMNS];


			for (int i = 0; i < inputList.size(); i++) {

				String[] myStringArray = inputList.get(i).split(" ");

				for (int j = 0; j < myStringArray.length; j++) {
					cellMatrixGrid[i][j] = myStringArray[j];

				}
			}

		return cellMatrixGrid;

	}
	
	
	public List<String> readInputFile() {
		String fileName = GameOfLifeConstants.INPUT_FILE;
		List<String> list = new ArrayList<>();

		// read file into stream, try-with-resources
		try (Stream<String> stream = Files.lines(Paths.get(fileName))) {
			// list = stream
			// .filter(line -> !line.startsWith("line3"))
			// .collect(Collectors.toList());
			list = stream.collect(Collectors.toList());

		} catch (IOException e) {
			e.printStackTrace();
		}
		return list;
	}
}