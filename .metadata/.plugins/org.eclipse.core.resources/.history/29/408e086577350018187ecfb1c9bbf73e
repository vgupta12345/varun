package com.nordea.gol.service.impl;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import com.nordea.gol.constants.GameOfLifeConstants;
import com.nordea.gol.service.MatrixGenerationService;

@Service
public class MatrixGenerationServiceImpl implements MatrixGenerationService {

	private static final Logger LOGGER = LoggerFactory.getLogger(MatrixGenerationService.class);

	@Override
	public String[][] generateCellMatrix() {

		List<String> inputList = readInputFile();

		String[][] cellMatrixGrid = new String[GameOfLifeConstants.NUMBER_OF_ROWS][GameOfLifeConstants.NUMBER_OF_COLUMNS];

		for (int i = 0; i < inputList.size(); i++) {

			String[] myStringArray = inputList.get(i).split(" ");

			for (int j = 0; j < myStringArray.length; j++) {
				cellMatrixGrid[i][j] = myStringArray[j];

			}
		}

		return cellMatrixGrid;

	}

	private List<String> readInputFile() {
		String fileName = GameOfLifeConstants.INPUT_FILE;
		List<String> list = new ArrayList<>();

		// read file into stream, try-with-resources
		try (Stream<String> stream = Files.lines(Paths.get(fileName))) {
			list = stream.collect(Collectors.toList());
		} catch (IOException fileReadException) {
			LOGGER.error("IO exception during file read ", fileReadException);

		}
		return list;
	}
}